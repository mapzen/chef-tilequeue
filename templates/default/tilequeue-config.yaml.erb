queue:
  type: <%= node[:tilequeue][:queue][:type] %>
  name: <%= node[:tilequeue][:queue][:name] %>
  <%- if node[:tilequeue][:queue][:zoom_queue_map] -%>
  zoom-queue-map:
    <%- node[:tilequeue][:queue][:zoom_queue_map].each do |zoom_range, queue_name| -%>
    <%= zoom_range %>: <%= queue_name %>
    <%- end -%>
  <%- end -%>
store:
  type: <%= node[:tilequeue][:store][:type] %>
  name: <%= node[:tilequeue][:store][:name] %>
  path: <%= node[:tilequeue][:store][:path] %>
  date-prefix: <%= node[:tilequeue][:store][:date_prefix] %>
  reduced-redundancy: <%= node[:tilequeue][:store][:reduced_redundancy] %>
aws:
  credentials:
    aws_access_key_id: <%= node[:tilequeue][:aws][:credentials][:aws_access_key_id] %>
    aws_secret_access_key: <%= node[:tilequeue][:aws][:credentials][:aws_secret_access_key] %>
tiles:
  seed:
    <%- if node[:tilequeue][:tiles][:all][:enabled] -%>
    all:
      zoom-start: <%= node[:tilequeue][:tiles][:all][:zoom_start] %>
      zoom-until: <%= node[:tilequeue][:tiles][:all][:zoom_until] %>
    <%- end -%>
    <%- if node[:tilequeue][:tiles][:metro_extract][:enabled] -%>
    metro-extract:
      url: <%= node[:tilequeue][:tiles][:metro_extract][:url] %>
      zoom-start: <%= node[:tilequeue][:tiles][:metro_extract][:zoom_start] %>
      zoom-until: <%= node[:tilequeue][:tiles][:metro_extract][:zoom_until] %>
    <%- end -%>
    <%- if node[:tilequeue][:tiles][:top_tiles][:enabled] -%>
    top-tiles:
      url: <%= node[:tilequeue][:tiles][:top_tiles][:url] %>
      zoom-start: <%= node[:tilequeue][:tiles][:top_tiles][:zoom_start] %>
      zoom-until: <%= node[:tilequeue][:tiles][:top_tiles][:zoom_until] %>
    <%- end -%>
    <%- if node[:tilequeue][:tiles][:custom][:enabled] -%>
    custom:
      zoom-start: <%= node[:tilequeue][:tiles][:custom][:zoom_start] %>
      zoom-until: <%= node[:tilequeue][:tiles][:custom][:zoom_until] %>
      bboxes: <%= node[:tilequeue][:tiles][:custom][:bboxes] %>
    <%- end -%>
    should-add-to-tiles-of-interest: <%= node[:tilequeue][:tiles][:should_add_to_tiles_of_interest] %>
  intersect:
    expired-location: <%= node[:tilequeue][:tiles][:expired_location] %>
    parent-zoom-until: <%= node[:tilequeue][:tiles][:parent_zoom_until] %>
process:
  n-simultaneous-query-sets: <%= node[:tilequeue][:process][:n_simultaneous_query_sets] %>
  n-simultaneous-s3-storage: <%= node[:tilequeue][:process][:n_simultaneous_s3_storage] %>
  log-queue-sizes: <%= node[:tilequeue][:process][:log_queue_sizes] %>
  log-queue-sizes-interval-seconds: <%= node[:tilequeue][:process][:log_queue_sizes_seconds] %>
  query-config: <%= node[:tilequeue][:vector_datasource][:path] %>/queries.yaml
  template-path: <%= node[:tilequeue][:vector_datasource][:path] %>/queries
  reload-templates: false
  formats: <%= node[:tilequeue][:process][:formats] %>
<%- if node[:tilequeue][:process][:layers_to_format] -%>
  layers-to-format:
<%- for layer_to_format in node[:tilequeue][:process][:layers_to_format] -%>
    - layer: <%= layer_to_format[:layer] %>
      formats: <%= layer_to_format[:formats] %>
      zoom-start: <%= layer_to_format[:zoom_start] %>
      zoom-until: <%= layer_to_format[:zoom_until] %>
<%- end -%>
<%- end -%>
<%- if node[:tilequeue][:process][:buffer] -%>
  buffer:
  <%- node[:tilequeue][:process][:buffer].each do |fmt_ext, fmt_data| -%>
    <%= fmt_ext %>:
      <%- if fmt_data['layer'] -%>
      layer:
      <%- fmt_data['layer'].each do |layer_name, layer_data| -%>
        <%= layer_name %>:
          <%- layer_data.each do |geom_type, value| -%>
          <%= geom_type %>: <%= value %>
          <%- end -%>
      <%- end -%>
      <%- end -%>
      <%- if fmt_data['geometry'] -%>
      geometry:
        <%- fmt_data['geometry'].each do |geom_type, value| -%>
        <%= geom_type %>: <%= value %>
        <%- end -%>
      <%- end -%>
  <%- end -%>
<%- end -%>
logging:
  config: <%= node[:tilequeue][:logging][:config] %>
redis:
  host: <%= node[:tilequeue][:intersect][:redis][:host] %>
  port: <%= node[:tilequeue][:intersect][:redis][:port] %>
  db: <%= node[:tilequeue][:intersect][:redis][:db] %>
  cache-set-key: <%= node[:tilequeue][:intersect][:redis][:cache_set_key] %>
postgresql:
  host: <%= node[:tilequeue][:postgresql][:host] %>
  port: 5432
  dbnames: <%= node[:tilequeue][:postgresql][:dbnames] %>
  user: <%= node[:tilequeue][:postgresql][:user] %>
  password: <%= node[:tilequeue][:postgresql][:password] %>
wof:
  neighbourhoods-meta-url: <%= node[:tilequeue][:wof][:meta_url][:neighbourhoods] %>
  microhoods-meta-url: <%= node[:tilequeue][:wof][:meta_url][:microhoods] %>
  macrohoods-meta-url: <%= node[:tilequeue][:wof][:meta_url][:macrohoods] %>
  boroughs-meta-url: <%= node[:tilequeue][:wof][:meta_url][:boroughs] %>
  data-prefix-url: <%= node[:tilequeue][:wof][:data_prefix_url] %>
  max-retries: <%= node[:tilequeue][:wof][:max_retries] %>
  postgresql:
    host: <%= node[:tilequeue][:wof][:postgresql][:host] %>
    port: 5432
    dbname: <%= node[:tilequeue][:wof][:postgresql][:dbname] %>
    user: <%= node[:tilequeue][:wof][:postgresql][:user] %>
    password: <%= node[:tilequeue][:wof][:postgresql][:password] %>
<%- if node[:tilequeue][:metatile][:enabled] -%>
metatile:
  size: <%= node[:tilequeue][:metatile][:size] %>
  store_metatile_and_originals: <%= node[:tilequeue][:metatile][:store_metatile_and_originals] %>
<%- end -%>
